{"ast":null,"code":"import { Observable } from 'rxjs';\nimport { io } from 'socket.io-client';\nimport * as i0 from \"@angular/core\";\nexport let ChatService = /*#__PURE__*/(() => {\n  class ChatService {\n    constructor() {\n      this.url = 'http://localhost:3000'; // your server local path\n\n      this.socket = io(this.url, {\n        transports: ['websocket', 'polling', 'flashsocket']\n      });\n    }\n\n    joinRoom(data) {\n      this.socket.emit('join', data);\n    }\n\n    sendMessage(data) {\n      this.socket.emit('message', data);\n    }\n\n    getMessage() {\n      return new Observable(observer => {\n        this.socket.on('new message', data => {\n          observer.next(data);\n        });\n        return () => {\n          this.socket.disconnect();\n        };\n      });\n    }\n\n    getStorage() {\n      const storage = localStorage.getItem('chats');\n      return storage ? JSON.parse(storage) : [];\n    }\n\n    setStorage(data) {\n      localStorage.setItem('chats', JSON.stringify(data));\n    }\n\n  }\n\n  ChatService.ɵfac = function ChatService_Factory(t) {\n    return new (t || ChatService)();\n  };\n\n  ChatService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ChatService,\n    factory: ChatService.ɵfac,\n    providedIn: 'root'\n  });\n  return ChatService;\n})();","map":null,"metadata":{},"sourceType":"module"}